# coding: utf-8

"""
    Hydra API

    Specification of the Hydra REST API  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from hydra_client.configuration import Configuration


class InlineResponse200(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'username': 'str',
        'fullname': 'str',
        'emailaddress': 'str',
        'userroles': 'list[str]'
    }

    attribute_map = {
        'username': 'username',
        'fullname': 'fullname',
        'emailaddress': 'emailaddress',
        'userroles': 'userroles'
    }

    def __init__(self, username=None, fullname=None, emailaddress=None, userroles=None, local_vars_configuration=None):  # noqa: E501
        """InlineResponse200 - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._username = None
        self._fullname = None
        self._emailaddress = None
        self._userroles = None
        self.discriminator = None

        if username is not None:
            self.username = username
        if fullname is not None:
            self.fullname = fullname
        if emailaddress is not None:
            self.emailaddress = emailaddress
        if userroles is not None:
            self.userroles = userroles

    @property
    def username(self):
        """Gets the username of this InlineResponse200.  # noqa: E501

        user  # noqa: E501

        :return: The username of this InlineResponse200.  # noqa: E501
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this InlineResponse200.

        user  # noqa: E501

        :param username: The username of this InlineResponse200.  # noqa: E501
        :type: str
        """

        self._username = username

    @property
    def fullname(self):
        """Gets the fullname of this InlineResponse200.  # noqa: E501

        full name  # noqa: E501

        :return: The fullname of this InlineResponse200.  # noqa: E501
        :rtype: str
        """
        return self._fullname

    @fullname.setter
    def fullname(self, fullname):
        """Sets the fullname of this InlineResponse200.

        full name  # noqa: E501

        :param fullname: The fullname of this InlineResponse200.  # noqa: E501
        :type: str
        """

        self._fullname = fullname

    @property
    def emailaddress(self):
        """Gets the emailaddress of this InlineResponse200.  # noqa: E501

        email  # noqa: E501

        :return: The emailaddress of this InlineResponse200.  # noqa: E501
        :rtype: str
        """
        return self._emailaddress

    @emailaddress.setter
    def emailaddress(self, emailaddress):
        """Sets the emailaddress of this InlineResponse200.

        email  # noqa: E501

        :param emailaddress: The emailaddress of this InlineResponse200.  # noqa: E501
        :type: str
        """

        self._emailaddress = emailaddress

    @property
    def userroles(self):
        """Gets the userroles of this InlineResponse200.  # noqa: E501

        user roles  # noqa: E501

        :return: The userroles of this InlineResponse200.  # noqa: E501
        :rtype: list[str]
        """
        return self._userroles

    @userroles.setter
    def userroles(self, userroles):
        """Sets the userroles of this InlineResponse200.

        user roles  # noqa: E501

        :param userroles: The userroles of this InlineResponse200.  # noqa: E501
        :type: list[str]
        """

        self._userroles = userroles

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse200):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, InlineResponse200):
            return True

        return self.to_dict() != other.to_dict()
